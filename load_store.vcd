$date
	Thu Dec  9 15:43:16 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module load_store_tb $end
$var wire 1 ! reg_writeenable $end
$var wire 32 " reg_writedata [31:0] $end
$var wire 4 # reg_byteenable [3:0] $end
$var wire 1 $ mem_writeenable $end
$var wire 32 % mem_writedata [31:0] $end
$var wire 1 & mem_readenable $end
$var wire 4 ' mem_byteenable [3:0] $end
$var wire 32 ( mem_address [31:0] $end
$var wire 32 ) instruction_out [31:0] $end
$var reg 32 * PC_in [31:0] $end
$var reg 1 + clk $end
$var reg 1 , lb $end
$var reg 1 - lbu $end
$var reg 1 . lh $end
$var reg 1 / lhu $end
$var reg 1 0 lui $end
$var reg 1 1 lw $end
$var reg 1 2 lwl $end
$var reg 1 3 lwr $end
$var reg 32 4 mem_readdata [31:0] $end
$var reg 16 5 offset [15:0] $end
$var reg 32 6 rs_data [31:0] $end
$var reg 5 7 rt [4:0] $end
$var reg 32 8 rt_data [31:0] $end
$var reg 1 9 sb $end
$var reg 1 : sh $end
$var reg 2 ; state [1:0] $end
$var reg 1 < sw $end
$var reg 1 = waitrequest $end
$scope module LS $end
$var wire 32 > PC_in [31:0] $end
$var wire 1 + clk $end
$var wire 32 ? instruction_out [31:0] $end
$var wire 1 , lb $end
$var wire 1 - lbu $end
$var wire 1 . lh $end
$var wire 1 / lhu $end
$var wire 1 0 lui $end
$var wire 1 1 lw $end
$var wire 1 2 lwl $end
$var wire 1 3 lwr $end
$var wire 32 @ mem_readdata [31:0] $end
$var wire 16 A offset [15:0] $end
$var wire 32 B rs_data [31:0] $end
$var wire 5 C rt [4:0] $end
$var wire 32 D rt_data [31:0] $end
$var wire 1 9 sb $end
$var wire 1 : sh $end
$var wire 2 E state [1:0] $end
$var wire 1 < sw $end
$var wire 1 = waitrequest $end
$var wire 32 F offset_sign_extended [31:0] $end
$var wire 32 G mem_address [31:0] $end
$var wire 32 H actual_address [31:0] $end
$var reg 32 I IR [31:0] $end
$var reg 4 J mem_byteenable [3:0] $end
$var reg 1 & mem_readenable $end
$var reg 32 K mem_writedata [31:0] $end
$var reg 1 $ mem_writeenable $end
$var reg 4 L reg_byteenable [3:0] $end
$var reg 32 M reg_writedata [31:0] $end
$var reg 1 ! reg_writeenable $end
$upscope $end
$scope task resetVars $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 M
b1111 L
b0 K
b1111 J
bx I
bx H
b10100 G
bx F
b0 E
bx D
bx C
bx B
bx A
bx @
bx ?
b10100 >
x=
x<
b0 ;
x:
x9
bx 8
bx 7
bx 6
bx 5
bx 4
x3
x2
x1
x0
x/
x.
x-
x,
0+
b10100 *
bx )
b10100 (
b1111 '
1&
b0 %
0$
b1111 #
b0 "
0!
$end
#10
b1111 H
b1111 F
b110010 )
b110010 ?
b110010 I
b1111 5
b1111 A
b0 6
b0 B
11
b110010 4
b110010 @
b1100 (
b1100 G
b1 ;
b1 E
1+
#20
0+
#30
b101000 4
b101000 @
b101000 "
b101000 M
1!
0&
b10 ;
b10 E
1+
#40
0+
#50
b0 H
b0 F
0=
b0 4
b0 @
b0 *
b0 >
b0 7
b0 C
b0 8
b0 D
b0 5
b0 A
0<
0:
09
03
02
01
00
0/
0.
0-
0,
1&
0!
b0 (
b0 G
b0 ;
b0 E
1+
#60
0+
#70
b0 )
b0 ?
b0 I
b1 ;
b1 E
1+
#80
0+
#90
0&
b10 ;
b10 E
1+
#100
0+
#110
1&
b0 ;
b0 E
1+
